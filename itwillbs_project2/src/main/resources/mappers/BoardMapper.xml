<?xml version="1.0" encoding="UTF-8"?>
<!-- boardMapper.xml -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project2.mapper.BoardMapper">

	<!-- 컬럼명과 VO객체를 매핑설정(기본값 생략) -->
	<resultMap type="com.project2.domain.BoardVO" id="boardMap">
		<result property="enf_notice_num" column="enf_notice_num" />
		<result property="enf_event_num" column="enf_event_num" />
		<result property="enf_content" column="enf_content" />
		<result property="enf_title" column="enf_title" />
		<result property="enf_regdate" column="enf_regdate" />
	</resultMap>

	<!-- 최대 글번호 조회 -->
	<select id="getMaxNoticeNum" resultType="int">
		SELECT
		IFNULL(MAX(enf_notice_num), 0) FROM event_notice_faq_board
	</select>
	<!-- 최대 글번호 조회 -->

	<!-- 글쓰기 -->
	<insert id="createBoard">
		INSERT INTO event_notice_faq_board
		(enf_category,
		enf_notice_num, enf_title,
		enf_content, enf_event_type, enf_updatedate)
		VALUES
		(1,
		#{enf_notice_num}, #{enf_title}, #{enf_content}, 0, null);
	</insert>
	<!-- 글쓰기 -->

	<!-- 글 목록 조회 -->
	<select id="getListAll" resultType="BoardVO"
		resultMap="boardMap">
		select * from event_notice_faq_board
		order by enf_notice_num
		desc
	</select>
	<!-- 글 목록 조회 -->

	<!-- 글 조회수 1증가 -->
	<update id="increaseViewCount">
		update event_notice_faq_board set
		enf_viewcnt=enf_viewcnt+1
		where enf_notice_num = #{enf_notice_num}
	</update>
	<!-- 글 조회수 1증가 -->

	<!-- 특정 글정보를 조회 -->
	<select id="getBoard" resultType="BoardVO">
		select * from
		event_notice_faq_board
		where enf_notice_num = #{enf_notice_num}
	</select>
	<!-- 특정 글정보를 조회 -->

	<!-- 특정 글정보 수정 -->
	<update id="updateBoard">
		update event_notice_faq_board set
		enf_title =
		#{enf_title},
		enf_content = #{enf_content},
		enf_regdate =
		CURRENT_TIMESTAMP,
		enf_updatedate = CURRENT_TIMESTAMP
		where
		enf_notice_num = #{enf_notice_num}
	</update>
	<!-- 특정 글정보 수정 -->

	<!-- 특정 글 삭제 -->
	<delete id="removeBoard">
		delete from event_notice_faq_board
		where
		enf_notice_num = #{enf_notice_num}
	</delete>
	<!-- 특정 글 삭제 -->

	<!-- 페이징 처리 후 글 리스트 조회 -->
	<select id="boardPage" resultType="BoardVO">
		select * from
		event_notice_faq_board
		order by enf_notice_num desc, enf_regdate desc
		limit #{page}, 10
	</select>
	<!-- 페이징 처리 후 글 리스트 조회 -->

	<!-- 페이징 처리 후 글 리스트 조회 -->
	<select id="boardCri" resultType="BoardVO">
		select * from
		event_notice_faq_board
		order by enf_notice_num desc, enf_regdate desc
		limit #{pageStart}, #{pageSize}
	</select>
	<!-- 페이징 처리 후 글 리스트 조회 -->

	<!-- 게시판에 저장된 총 글의 개수 조회 -->
	<select id="boardCount" resultType="int">
 		<![CDATA[
 		select count(*) from event_notice_faq_board
 		where enf_notice_num > 0
 		]]>
	</select>
	<!-- 게시판에 저장된 총 글의 개수 조회 -->

	<select id="searchByTitle" resultType="BoardVO">
		SELECT * FROM
		event_notice_faq_board
		WHERE (enf_title LIKE CONCAT('%', #{searchTerm},
		'%')
		OR enf_content LIKE CONCAT('%', #{searchTerm}, '%'))
		AND
		enf_category = 1
	</select>

	<select id="getMaxEnfEventNum" resultType="int">
		SELECT
		MAX(enf_event_num) FROM event_notice_faq_board;
	</select>

	<!-- 이벤트 글쓰기 -->
	<insert id="createEvent"
		parameterType="com.project2.domain.BoardVO">
		INSERT INTO event_notice_faq_board
		(enf_category,
		enf_event_num, enf_title, enf_content, enf_viewcnt, enf_updatedate,
		enf_event_type, enf_img)
		VALUES
		(0, #{enf_event_num}, #{enf_title},
		#{enf_content}, 0, null,
		#{enf_event_type}, #{enf_img});
	</insert>

	<!-- 글 목록 조회 -->
	<select id="getEvListAll" resultType="BoardVO"
		resultMap="boardMap">
		select * from event_notice_faq_board
		order by enf_event_type
		desc
	</select>
	<!-- 글 목록 조회 -->

	<!-- 특정 글정보를 조회 -->
	<select id="evGetBoard" resultType="BoardVO">
		select * from
		event_notice_faq_board
		where enf_event_num = #{enf_event_num}
	</select>
	<!-- 특정 글정보를 조회 -->

	<!-- 게시물 업데이트 쿼리 -->
	<update id="eventUpdateBoard"
		parameterType="com.project2.domain.BoardVO">
		UPDATE event_notice_faq_board
		SET enf_title = #{enf_title},
		enf_content
		= #{enf_content},
		<if test="enf_img != null">
			enf_img = #{enf_img},
		</if>
		enf_regdate = CURRENT_TIMESTAMP,
		enf_updatedate = CURRENT_TIMESTAMP
		WHERE enf_event_num = #{enf_event_num}
	</update>

	<!-- 특정 글 삭제 -->
	<delete id="eventRemoveBoard">
		delete from event_notice_faq_board
		where
		enf_event_num
		= #{enf_event_num}
	</delete>
	<!-- 특정 글 삭제 -->

	<!-- 페이징 처리 후 글 리스트 조회 -->
	<select id="eventPage" resultType="BoardVO">
		select * from
		event_notice_faq_board
		order by enf_event_num desc, enf_regdate desc
		limit #{page}, 10
	</select>
	<!-- 페이징 처리 후 글 리스트 조회 -->

	<!-- 페이징 처리 후 글 리스트 조회 -->
	<select id="eventCri" resultType="BoardVO">
		select * from
		event_notice_faq_board
		order by enf_event_num desc, enf_regdate desc
		limit #{pageStart}, #{pageSize}
	</select>
	<!-- 페이징 처리 후 글 리스트 조회 -->


	<!-- 게시판에 저장된 총 글의 개수 조회 -->
	<select id="eventCount" resultType="int">
 		<![CDATA[
 		select count(*) from event_notice_faq_board
 		where enf_event_num > 0
 		]]>
	</select>
	<!-- 게시판에 저장된 총 글의 개수 조회 -->

	<!-- 최대 글번호 조회 -->
	<select id="getMaxEnfFaqNum" resultType="int">
		SELECT
		IFNULL(MAX(enf_faq_num), 0) FROM event_notice_faq_board
	</select>
	<!-- 최대 글번호 조회 -->

	<!-- FAQ 글쓰기 -->
	<insert id="createFaq">
		INSERT INTO event_notice_faq_board
		(enf_category,
		enf_faq_num, enf_title,
		enf_content, enf_event_type, enf_updatedate)
		VALUES
		(2,
		#{enf_faq_num}, #{enf_title}, #{enf_content}, 0, NULL);
	</insert>
	<!-- 글쓰기 -->

	<!-- 글 목록 조회 -->
	<select id="getFaListAll" resultType="BoardVO"
		resultMap="boardMap">
		select * from event_notice_faq_board
		order by enf_faq_num
		desc
	</select>
	<!-- 글 목록 조회 -->

	<!-- 특정 글정보를 조회 -->
	<select id="getFaqBoard" resultType="BoardVO">
		select * from
		event_notice_faq_board
		where enf_faq_num = #{enf_faq_num}
	</select>
	<!-- 특정 글정보를 조회 -->


	<!-- faq 업데이트 쿼리 -->
	<update id="faqUpdateBoard"
		parameterType="com.project2.domain.BoardVO">
		UPDATE event_notice_faq_board
		SET enf_title =
		#{enf_title},
		enf_content
		= #{enf_content},
		enf_regdate =
		CURRENT_TIMESTAMP,
		enf_updatedate = CURRENT_TIMESTAMP
		WHERE enf_faq_num
		= #{enf_faq_num}
	</update>

	<!-- 특정 글 삭제 -->
	<delete id="faqRemoveBoard">
		delete from event_notice_faq_board
		where
		enf_faq_num
		=
		#{enf_faq_num}
	</delete>
	<!-- 특정 글 삭제 -->

	<!-- 페이징 처리 후 글 리스트 조회 -->
	<select id="faqPage" resultType="BoardVO">
		select * from
		event_notice_faq_board
		order by enf_faq_num desc, enf_regdate desc
		limit #{page}, 10
	</select>
	<!-- 페이징 처리 후 글 리스트 조회 -->

	<!-- 페이징 처리 후 글 리스트 조회 -->
	<select id="faqCri" resultType="BoardVO">
		select * from
		event_notice_faq_board
		order by enf_faq_num desc, enf_regdate desc
		limit #{pageStart}, #{pageSize}
	</select>
	<!-- 페이징 처리 후 글 리스트 조회 -->

	<!-- 게시판에 저장된 총 글의 개수 조회 -->
	<select id="faqCount" resultType="int">
 		<![CDATA[
 		select count(*) from event_notice_faq_board
 		where enf_faq_num > 0
 		]]>
	</select>
	<!-- 게시판에 저장된 총 글의 개수 조회 -->

	<!-- 클래스 등록 insert -->
	<insert id="classCreate">
		insert into experience (exp_num, user_num, exp_phone,
		exp_place, exp_name,
		exp_start_date, exp_end_date, exp_price,
		exp_region, exp_category,
		exp_capacity, exp_inout, exp_summary_img,
		exp_detail_img)
		values
		(default, #{user_num}, #{exp_phone}, #{exp_place}, #{exp_name},
		#{exp_start_date}, #{exp_end_date}, #{exp_price}, #{exp_region},
		#{exp_category},#{exp_capacity}, #{exp_inout}, #{exp_summary_img},
		#{exp_detail_img})
	</insert>
	<!-- 클래스 등록 insert -->
</mapper>